[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\yaqee\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\yaqee\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Eclipse Adoptium Java 11.0.24)
[debug] Load.defaultLoad until apply took 95.9373ms
[debug]           Load.loadUnit: plugins took 58.9411ms
[debug]           Load.loadUnit: defsScala took 0.223ms
[debug] [Loading] Scanning directory C:\bigdata\BigDataProj\project
[debug]             Load.loadUnit: mkEval took 4.8225ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\bigdata\BigDataProj\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.5314 ms
[info] loading settings for project bigdataproj-build from idea.sbt ...
[debug]               Load.resolveProject(bigdataproj-build) took 31.5945ms
[debug]             Load.loadTransitive: finalizeProject(Project(id bigdataproj-build, base: C:\bigdata\BigDataProj\project, plugins: List(<none>))) took 50.2231ms
[debug] [Loading] Done in C:\bigdata\BigDataProj\project, returning: (bigdataproj-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2351.4469ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.4468ms
[debug]         Load.loadUnit(file:/C:/bigdata/BigDataProj/project/, ...) took 2418.5517ms
[debug]       Load.apply: load took 2538.4249ms
[debug]       Load.apply: resolveProjects took 3.918ms
[debug]       Load.apply: finalTransforms took 71.7103ms
[debug]       Load.apply: config.delegates took 18.9854ms
[debug]       Load.apply: Def.make(settings)... took 588.596ms
[debug]       Load.apply: structureIndex took 124.5419ms
[debug]       Load.apply: mkStreams took 5.0376ms
[info] loading project definition from C:\bigdata\BigDataProj\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5148.946ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\bigdata\BigDataProj
[debug]       Load.loadUnit: mkEval took 0.177ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.4346 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 64.0754ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\bigdata\BigDataProj, plugins: List(<none>))) took 66.5422ms
[debug] [Loading] Done in C:\bigdata\BigDataProj, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1156.672ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.5728ms
[debug]   Load.loadUnit(file:/C:/bigdata/BigDataProj/, ...) took 6311.1244ms
[debug] Load.apply: load took 6327.8321ms
[debug] Load.apply: resolveProjects took 0.1163ms
[debug] Load.apply: finalTransforms took 25.1054ms
[debug] Load.apply: config.delegates took 0.3715ms
[debug] Load.apply: Def.make(settings)... took 82.8935ms
[debug] Load.apply: structureIndex took 19.6929ms
[debug] Load.apply: mkStreams took 0.0028ms
[info] set current project to BigDataProj (in build file:/C:/bigdata/BigDataProj/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
